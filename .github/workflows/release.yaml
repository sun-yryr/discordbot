name: Release
on:
  workflow_run:
    workflows: [ci]
    types: [completed]
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  changesets:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
    steps:
      -
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      -
        name: Setup
        uses: ./.github/actions/setup
      -
        id: create_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      -
        name: Create Release Pull Request or Check for publishability
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ steps.create_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.PAT }}
          NODE_AUTH_TOKEN: ${{ secrets.PAT }}
        with:
          commit: "chore: Release packages"
          title: ":tada: Release packages"
          publish: pnpm changeset publish
      -
        name: Debug outputs
        run: echo "${{ steps.changesets.outputs.publishedPackages }}"

  release-image:
    runs-on: ubuntu-latest
    needs: changesets
    if: ${{ needs.changesets.outputs.published == 'true' }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.changesets.outputs.publishedPackages) }}
    concurrency:
      group: ${{ matrix.name }}
    steps:
      -
        name: Input
        run: echo "${{ toJson(matrix) }}"
      -
        name: format package name
        id: format-package-name
        # package 名を変換する (@sun-yryr/xxx -> xxx)
        run: echo "package=${OLD_PACKAGE/@sun-yryr\//}" >> "$GITHUB_OUTPUT"
        env:
          OLD_PACKAGE: ${{ matrix.name }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/sun-yryr/${{ steps.format-package-name.outputs.package }}
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.version }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags}}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ steps.format-package-name.outputs.package }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
